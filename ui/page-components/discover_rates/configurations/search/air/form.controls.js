const controls = [
	{
		label             : 'Origin Airport',
		name              : 'origin_airport_id',
		placeholder       : 'Search via name',
		includedInOptions : false,
		type              : 'async_select',
		asyncKey          : 'locations',
		grouped           : ['city', 'country'],
		params            : { filters: { type: ['airport', 'country', 'city'] } },
		rules             : { required: 'Origin Airport is required' },
	},
	{
		label             : 'Destination Airport',
		name              : 'destination_airport_id',
		placeholder       : 'Search via name',
		includedInOptions : false,
		type              : 'async_select',
		asyncKey          : 'locations',
		grouped           : ['city', 'country'],
		params            : { filters: { type: ['airport', 'country', 'city'] } },
		rules             : { required: 'Destination Airport is required' },
	},
	{
		label         : 'Commodity/service',
		name          : 'commodity',
		type          : 'chips',
		commodityType : 'air_freight',
		value         : 'general',
		rules         : { required: 'Commodity is required' },
	},
	{
		label        : '',
		name         : 'inco_term',
		type         : 'inco-terms-select',
		selectType   : 'chips',
		incoTermType : 'air_freight',
		rules        : { require: 'Inco-term is required' },
	},
	{
		label       : 'Packages count',
		name        : 'packages_count',
		placeholder : 'Enter packages count',
		type        : 'number',
		value       : 1,
		span        : 6,
		rules       : { min: 1, max: 10000 },
	},
	{
		label    : 'Gross Weight',
		name     : 'weight',
		subLabel : '(kgs)',
		span     : 6,
		type     : 'number',
		value    : 1,
		rules    : { required: 'Weight is required', min: 0.000000001 },
	},
	{
		label    : 'Total Volume',
		name     : 'volume',
		span     : 6,
		subLabel : '(cbm)',
		type     : 'number',
		value    : 1,
		rules    : { required: 'Required', min: 0.0000000001 },
	},
	{
		label : '',
		name  : 'cbm_calculator',
		span  : 4,
		type  : 'cbm_calculator',
	},
];

export default controls;
