const airControls = [
	{
		label     : 'Container',
		type      : 'fieldArray',
		name      : 'search_rates',
		addButton : 'Containers',
		controls  : [
			{
				inlineLabel       : 'Origin',
				name              : 'origin_airport_id',
				apiKey            : 'origin_airport_id',
				placeholder       : 'Shipping from',
				includedInOptions : false,
				params            : {
					filters  : { type: ['airport', 'city'] },
					includes : { continent_id: true },
				},
				grouped  : ['city', 'country'],
				type     : 'async_select',
				asyncKey : 'locations',
				rules    : { required: 'Origin airport is required' },
				span     : 4.65,
			},
			{
				inlineLabel       : 'Destination',
				name              : 'destination_airport_id',
				apiKey            : 'destination_airport_id',
				placeholder       : 'Shipping to',
				includedInOptions : false,
				params            : {
					filters  : { type: ['airport', 'city'] },
					includes : { continent_id: true },
				},
				grouped  : ['city', 'country'],
				type     : 'async_select',
				asyncKey : 'locations',
				rules    : { required: 'Destination airport is required' },
				span     : 4.35,
			},
			{
				inlineLabel  : 'Cargo Ready Date',
				name         : 'cargo_ready_date',
				placeholder  : 'Select date',
				type         : 'datepicker',
				showOptional : false,
				minDate      : new Date(),
				rules        : {
					required: 'Cargo Ready Date is required',
				},
				style : { height: '36px' },
				span  : 3,
			},
			{
				name        : 'inco_term',
				inlineLabel : 'Incoterm',
				type        : 'select',
				placeholder : 'Incoterm',
				rules       : { required: 'Incoterm is required' },
				span        : 2.25,
			},
			{
				name        : 'commodity_type',
				inlineLabel : 'Commodity Type',
				type        : 'select',
				placeholder : 'Commodity',
				options     : [
					{ label: 'General Cargo', value: 'general' },
					{ label: 'Dangerous Goods', value: 'dangerous' },
					{ label: 'Temperature Controlled/Pharma', value: 'temp_controlled' },
					{ label: 'Other Special Commodity Type', value: 'other_special' },
				],
				rules : { required: 'Commodity Type is required' },
				span  : 2.25,
			},
			{
				name        : 'commodity_subtype',
				inlineLabel : 'Commodity Subtype',
				type        : 'select',
				placeholder : 'Select',
				rules       : { required: 'Commodity Sub Type is required' },
				span        : 2.25,
			},
			{
				name        : 'payment_type',
				inlineLabel : 'Payment Terms',
				type        : 'select',
				placeholder : 'select payment terms',
				options     : [
					{ label: 'Prepaid', value: 'prepaid' },
					{ label: 'Collect', value: 'collect' },
					{ label: 'Third Party', value: 'third_party' },
				],
				rules : { required: ' Payment Terms required' },
				span  : 2.25,
			},
			{
				name        : 'additional_services',
				inlineLabel : 'Additional Services',
				span        : 2.9,
			},
			{
				name        : 'calculate_by',
				label       : 'Calculate By',
				type        : 'radio',
				placeholder : 'Enter',
				options     : [
					{ label: 'By Total weight/volume', value: 'total' },
					{ label: 'By Package Details', value: 'unit' },
				],
				radioGroup : true,
				rules      : { required: 'Required' },
				span       : 12,
			},
			{
				label     : 'Packages',
				type      : 'fieldArray',
				name      : 'dimensions',
				addButton : 'Packages',
				controls  : [
					{
						inlineLabel : 'Package Type',
						name        : 'packing_type',
						type        : 'select',
						placeholder : 'Package type',
						options     : [
							{
								label : 'Pallet',
								value : 'pallet',
							},
							{
								label : 'Box',
								value : 'box',
							},
							{
								label : 'Crate',
								value : 'crate',
							},
							{
								label : 'Loose',
								value : 'loose',
							},
						],
						rules : { required: 'Package type is required' },
						span  : 2,
					},
					{
						inlineLabel : 'Total units',
						name        : 'packages_count',
						placeholder : '',
						subLabel    : 'packages',
						type        : 'number',
						rules       : { min: 1, max: 10000, required: 'Packages is required' },
						span        : 1.7,
					},
					{
						inlineLabel : 'Weight per unit',
						name        : 'package_weight',
						subLabel    : 'kgs',
						type        : 'number',
						step        : 0.1,
						rules       : { required: 'Weight is required', min: 0.001, max: 150 },
						span        : 1.7,
					},
					{
						inlineLabel : 'Length',
						name        : 'length',
						placeholder : 'Length',
						subLabel    : 'cm',
						type        : 'number',
						step        : 0.1,
						rules       : { min: 0.01, required: 'Length is required' },
						span        : 1.5,
					},
					{
						inlineLabel : 'Width',
						name        : 'width',
						placeholder : 'Width',
						subLabel    : 'cm',
						type        : 'number',
						step        : 0.1,
						rules       : { min: 0.01, required: 'Width is required' },
						span        : 1.5,
					},
					{
						inlineLabel : 'Height',
						name        : 'height',
						placeholder : 'Height',
						subLabel    : 'cm',
						type        : 'number',
						step        : 0.1,
						rules       : { min: 0.01, required: 'Height is required' },
						span        : 1.5,
					},
					{
						inlineLabel : 'Stackability',
						name        : 'handling_type',
						type        : 'select',
						placeholder : 'Stackability',
						options     : [
							{
								label : 'Stackable',
								value : 'stackable',
							},
							{
								label : 'Non-stackable',
								value : 'non_stackable',
							},
						],
						rules : { required: 'stackability is required' },
						span  : 2.1,
					},
				],
			},
			{
				label     : 'Packages',
				type      : 'fieldArray',
				name      : 'containers',
				addButton : 'Packages',
				controls  : [
					{
						inlineLabel : 'Package Type',
						name        : 'packing_type',
						type        : 'select',
						placeholder : 'Package type',
						options     : [
							{
								label : 'Pallet',
								value : 'pallet',
							},
							{
								label : 'Box',
								value : 'box',
							},
							{
								label : 'Crate',
								value : 'crate',
							},
							{
								label : 'Loose',
								value : 'loose',
							},
						],
						rules : { required: 'Package type is required' },
						span  : 2.4,
					},
					{
						inlineLabel : 'Total units',
						name        : 'packages_count',
						placeholder : 'Packages count',
						subLabel    : 'packages',
						type        : 'number',
						step        : 0.1,
						rules       : { min: 1, max: 10000, required: 'Packages is required' },
						span        : 2.4,
					},
					{
						inlineLabel : 'Total Weight',
						name        : 'package_weight',
						subLabel    : 'kgs',
						type        : 'number',
						step        : 0.1,
						rules       : {
							required : 'Weight is required',
							min      : 0.00001,
						},
						span: 2.4,
					},
					{
						inlineLabel : 'Total Volume',
						name        : 'volume',
						subLabel    : 'cbm',
						type        : 'number',
						step        : 0.1,
						rules       : {
							required : 'Total Volume is required',
							min      : 0.000001,
						},
						span: 2.4,
					},
					{
						inlineLabel : 'Stackability',
						name        : 'handling_type',
						type        : 'select',
						placeholder : 'Stackability',
						options     : [
							{
								label : 'Stackable',
								value : 'stackable',
							},
							{
								label : 'Non-stackable',
								value : 'non_stackable',
							},
						],
						rules : { required: 'stackability is required' },
						span  : 2.4,
					},
				],
			},
			{
				label    : 'Additional Remarks',
				type     : 'fieldArray',
				name     : 'remarks',
				controls : [
					{
						name           : 'preferred_air_lines',
						inlineLabel    : 'Preferred Air Lines',
						className      : 'remarks_shipping_lines',
						type           : 'async_select',
						defaultOptions : false,
						multiple       : true,
						valueKey       : 'id',
						placeholder    : 'Type to search',
						asyncKey       : 'air_lines',
						span           : 3,
					},
					{
						name           : 'excluded_air_lines',
						inlineLabel    : 'Excluded Air Lines',
						className      : 'remarks_shipping_lines',
						type           : 'async_select',
						defaultOptions : false,
						valueKey       : 'id',
						multiple       : true,
						placeholder    : 'Type to search',
						asyncKey       : 'air_lines',
						span           : 3,
					},
					{
						name        : 'price',
						inlineLabel : 'Indicative Price',
						placeholder : 'Price',
						type        : 'price_select',
						span        : 3,
						rules       : {
							validate: (value) => ((value.price === 0 ? 0 : value.price || 1) <= 0
								? 'Price should be greater than 0.'
								: undefined),
						},
					},
				],
			},
		],
	},
];

export default airControls;
